(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(e,n,a){e.exports=a(19)},18:function(e,n,a){},19:function(e,n,a){"use strict";a.r(n);var t=a(0),r=a.n(t),l=a(3),i=a.n(l),o=(a(17),a(4)),c=a(5),s=a(9),d=a(6),u=a(1),h=a(10),m=a(7),g=a(8);a(18);var f=function(e){function n(e){var a;return Object(o.a)(this,n),(a=Object(s.a)(this,Object(d.a)(n).call(this,e))).state={grid:"",islands:[]},a.handleChange=a.handleChange.bind(Object(u.a)(a)),a}return Object(h.a)(n,e),Object(c.a)(n,[{key:"handleChange",value:function(e){console.log(this);var n=e.target.value,a=g.a.parseGrid(n),t=function(e){return e.map(function(e){return"".concat(JSON.stringify(e.map(function(e){return"".concat(e.x,"-").concat(e.y)})).replace(/"/g,"").replace(/,/g,", "))})}(Object(m.a)(a));this.setState({grid:n,islands:t})}},{key:"render",value:function(){return r.a.createElement("div",null,r.a.createElement("div",null,r.a.createElement("h1",null,"Finding Islands")),r.a.createElement("div",null,r.a.createElement("p",null,"Below you can write a 2d grid map of '1's (land) and '0's (water), and the algorithm will return you an array of islands. Every island is represented by an array of the X-Y coordinates of its tiles. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically."),r.a.createElement("p",null,"Only the characters '0', '1' and newlines are considered. Other characters will be dismissed."),r.a.createElement("p",null,"The coordinates system's origin, 0-0, is at the top-left corner and increments by going on both right and down directions.")),r.a.createElement("div",null,r.a.createElement("form",null,r.a.createElement("label",null,r.a.createElement("textarea",{value:this.state.grid,onChange:this.handleChange})))),r.a.createElement("div",null,r.a.createElement("code",null,"[",this.state.islands.map(function(e){return r.a.createElement("pre",null," ",e)}),"]")),r.a.createElement("div",null,r.a.createElement("a",{href:"https://github.com/marcusmonteirodesouza/finding-islands"},"Source Code")))}}]),n}(r.a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(r.a.createElement(f,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[11,1,2]]]);
//# sourceMappingURL=main.2acdc9c9.chunk.js.map